var userApp=angular.module("userApp",["ngRoute","oc.lazyLoad","ngCookies","requestModule","flash","ngAnimate","ngTouch","ngPercentDisplay","userDashboardServiceModule","angular-svg-round-progress","ui.bootstrap","angular-nicescroll"]);userApp.controller("UserDashboardController",["$scope","$window","requestHandler","Flash","UserDashboardService","$interval","roundProgressService","limitToFilter","$timeout",function(e,t,a,r,o,s,n,l){e.foodSearchResult=[],e.userFood={},e.userFood.sessionid=1,e.graphSessionId="1",e.servings=0,e.current=e.caloriesIntake=0,e.max=e.gainGraphMax=100,e.exerciseSearchResult=[],e.userExercise={},e.caloriesSpent=0,e.workoutvalue=0,t.singlePicker=!1,t.minimumDate=new Date,e.weightUpdateText="Update Weight",e.graphs=1,e.historyReport=0,e.historyType=1,e.showExercise=0,e.doUserAddFood=function(){$(function(){$("#lean_overlay").fadeTo(1e3),$("#modal-add-food").fadeIn(600),$(".user_register").show()}),$(".modal_close").click(function(){$(".user_register").hide(),$("#modal-add-food").hide(),$("#lean_overlay").hide(),e.resetdata()}),$("#lean_overlay").click(function(){$(".user_register").hide(),$("#modal-add-food").hide(),$("#lean_overlay").hide(),e.resetdata()}),e.selectedFood=""},e.doUserAddExercise=function(){$(function(){$("#lean_overlay").fadeTo(1e3),$("#modal-add-exercise").fadeIn(600),$(".user_register").show()}),$(".modal_close").click(function(){$(".user_register").hide(),$("#modal-add-exercise").hide(),$("#lean_overlay").hide(),e.resetexercisedata()}),$("#lean_overlay").click(function(){$(".user_register").hide(),$("#modal-add-exercise").hide(),$("#lean_overlay").hide(),e.resetexercisedata()}),e.selectedExercise=""},e.frequentFood=function(t){e.isNew=!0,e.title="Add Food",e.loaded=!0;var a=o.doGetSelectedFoodDetails(t);a.then(function(t){e.userSelectedFoodDetails=t,e.loaded=!1,e.doUserAddFood()})},e.foodSelected=function(){e.isNew=!0,e.title="Add Food";var t=o.doGetSelectedFoodDetails(e.selectedFood.foodid);t.then(function(t){e.userSelectedFoodDetails=t,e.doUserAddFood()})};var d="",c="";e.doEditUserFood=function(t,a){e.isNew=!1,e.title="Edit Food",e.loaded=!0;var r=o.doGetSelectedFoodDetails(t);r.then(function(t){e.userSelectedFoodDetails=t;var r=o.doGetUserFoodDetails(a);r.then(function(t){e.userFood.userfoodid=t.userfoodid,e.userFood.foodid=t.foodid,$.each(e.userSelectedFoodDetails.measureid,function(a,r){r.measureid==t.measureid.measureid&&(e.userFood.measure=r,d=angular.copy(r))}),e.userFood.servings=parseInt(t.measureid.servings),c=angular.copy(t.measureid.servings),e.current=e.caloriesIntake=t.measureid.calories,e.current=e.current.toFixed(2),e.current.length-3>2?e.max=100+100*String(0|e.current).slice(0,-2):e.max=100,e.loaded=!1,e.doUserAddFood()})})},e.isCleanFood=function(){return angular.equals(d,e.userFood.measure)&&angular.equals(c,e.userFood.servings)},e.doCalculateCalories=function(){0==e.userFood.servings&&(e.current=e.caloriesIntake=0),!e.userFood.servings>0?e.current=e.caloriesIntake=0:(e.current=e.caloriesIntake=e.userFood.measure.calories*e.userFood.servings,e.current=e.current.toFixed(2),e.current.length-3>2?e.max=100+100*String(0|e.current).slice(0,-2):e.max=100)},e.doInsertUserFood=function(){e.userFood.foodid=e.userSelectedFoodDetails.foodid,e.userFood.measureid=e.userFood.measure.measureid,e.selectedDate==y?e.userFood.addeddate=e.selectedDate:e.userFood.addeddate=e.selectedDate.format("dd/mm/yyyy"),e.userFood.servings=parseInt(e.userFood.servings);var t=o.doInsertUserFood(e.userFood);t.then(function(){e.loadFoodDiary(e.userFood.addeddate),e.doGetIntakeBruntByDate(e.userFood.addeddate),e.goGetDailyIntakeGraph(e.userFood.addeddate),e.goGetSessionGraph(e.storedSessionId),e.doGetHistoryReport()})},e.doUpdateUserFood=function(){e.userFood.userfoodid=e.userFood.userfoodid,e.userFood.foodid=e.userFood.foodid,e.userFood.measureid=e.userFood.measure.measureid,e.userFood.servings=parseInt(e.userFood.servings);var t=o.doUpdateUserFood(e.userFood);t.then(function(){e.selectedDate==y?(e.loadFoodDiary(e.selectedDate),e.doGetIntakeBruntByDate(e.selectedDate),e.goGetDailyIntakeGraph(e.selectedDate),e.goGetSessionGraph(e.storedSessionId)):(e.loadFoodDiary(e.selectedDate.format("dd/mm/yyyy")),e.doGetIntakeBruntByDate(e.selectedDate.format("dd/mm/yyyy")),e.goGetDailyIntakeGraph(e.selectedDate.format("dd/mm/yyyy")),e.goGetSessionGraph(e.storedSessionId)),e.doGetHistoryReport()})},e.doDeleteUserFood=function(t){e.loaded=!0;var a=o.doDeleteUserFood(t);a.then(function(){e.selectedDate==y?(e.loadFoodDiary(e.selectedDate),e.doGetIntakeBruntByDate(e.selectedDate),e.goGetDailyIntakeGraph(e.selectedDate),e.goGetSessionGraph(e.storedSessionId)):(e.loadFoodDiary(e.selectedDate.format("dd/mm/yyyy")),e.doGetIntakeBruntByDate(e.selectedDate.format("dd/mm/yyyy")),e.goGetDailyIntakeGraph(e.selectedDate.format("dd/mm/yyyy")),e.goGetSessionGraph(e.storedSessionId)),e.doGetHistoryReport()})},e.loadFoodDiary=function(t){e.loaded=!0;var a=o.getFoodDiary(t);a.then(function(t){e.userFoodDiaryDataAll=t,e.loadSessionDetails(),e.loadSessionFood(),e.loaded=!1})},e.loadSessionDetails=function(){switch(parseInt(e.userFood.sessionid)){case 1:e.userFoodDiaryData=e.userFoodDiaryDataAll.BreakFast;break;case 2:e.userFoodDiaryData=e.userFoodDiaryDataAll.Brunch;break;case 3:e.userFoodDiaryData=e.userFoodDiaryDataAll.Lunch;break;case 4:e.userFoodDiaryData=e.userFoodDiaryDataAll.Evening;break;case 5:e.userFoodDiaryData=e.userFoodDiaryDataAll.Dinner}},e.inputChanged=function(t){if(t.length>=3){0==e.foodSearchResult.length&&(e.loadingFoods=!0);var a=o.searchFood(t,e.userFood.sessionid);return a.then(function(t){return e.foodSearchResult=t,e.loadingFoods=!1,e.foodSearchResult})}return{}},e.doGetDemograph=function(){var a=o.doGetDemographyDetails();a.then(function(a){if(e.demography=a,e.userProfile){var r=2;1==e.userProfile.gender&&(r=4),e.idealWeight=e.demography.height-100-(e.demography.height-150)/r,e.demography.weight<e.idealWeight?(e.upweight=1,e.idealWeightlevel=e.demography.weight/e.idealWeight,e.idealWeightlevel=100*e.idealWeightlevel/2,e.balanceweight=e.idealWeight-e.demography.weight,e.balanceweight=e.balanceweight.toFixed(2)):e.demography.weight>e.idealWeight?(e.upweight=0,e.idealWeightlevel=e.idealWeight/e.demography.weight,e.idealWeightlevel=100-100*e.idealWeightlevel/2,e.balanceweight=e.demography.weight-e.idealWeight,e.balanceweight=e.balanceweight.toFixed(2)):(e.upweight=2,e.idealWeightlevel=1,e.idealWeightlevel=100*e.idealWeightlevel/2),t.idealWeightlevel=e.idealWeightlevel.toFixed(2),viewWeightGraph()}else{var i=o.doGetUserDetails();i.then(function(a){e.userProfile=a,e.userProfileImage=e.userProfile.imageurl+"?decache="+Math.random();var r=2;1==e.userProfile.gender&&(r=4),e.idealWeight=e.demography.height-100-(e.demography.height-150)/r,e.demography.weight<e.idealWeight?(e.upweight=1,e.idealWeightlevel=e.demography.weight/e.idealWeight,e.idealWeightlevel=100*e.idealWeightlevel/2,e.balanceweight=e.idealWeight-e.demography.weight,e.balanceweight=e.balanceweight.toFixed(2)):e.demography.weight>e.idealWeight?(e.upweight=0,e.idealWeightlevel=e.idealWeight/e.demography.weight,e.idealWeightlevel=100-100*e.idealWeightlevel/2,e.balanceweight=e.demography.weight-e.idealWeight,e.balanceweight=e.balanceweight.toFixed(2)):(e.upweight=2,e.idealWeightlevel=1,e.idealWeightlevel=100*e.idealWeightlevel/2),t.idealWeightlevel=e.idealWeightlevel.toFixed(2),setTimeout(viewWeightGraph(),1e3)})}})},e.doGetDemograph();var u=o.doGetFrequentlyAdded();u.then(function(t){e.frequentFoodList=t}),e.doAddSuggestFood=function(){a.postRequest("user/searchFoodnamebyUser/",{foodname:e.foodSuggest.foodname}).then(function(t){if(0==t.data.Response_status){var a=o.doAddSuggestedFood(e.foodSuggest);a.then(function(){successMessage(r,"Thanks&nbsp;for&nbsp;the&nbspsuggestion!!"),e.resetdata()},function(){errorMessage(r,"Please try again later!")})}else 1==t.data.Response_status&&(errorMessage(r,"Food&nbsp;already&nbsp;exists"),e.resetdata())})},e.doAddSuggestExercise=function(){var t=o.doAddSuggestedExercise(e.exerciseSuggest);t.then(function(){successMessage(r,"Thanks&nbsp;for&nbsp;the&nbspsuggestion!!"),e.resetexercisedata()},function(){errorMessage(r,"Please try again later!")})},e.inputChangedExercise=function(t){if(t.length>=3){0==e.exerciseSearchResult.length&&(e.loadingExercise=!0);var a=o.searchExercise(t);return a.then(function(t){return e.exerciseSearchResult=t,e.loadingExercise=!1,e.exerciseSearchResult})}},e.frequentExercise=function(t){e.isNew=!0,e.title="Add Exercise",e.loaded=!0;var a=o.doGetSelectedExerciseDetails(t);a.then(function(t){e.userSelectedExerciseDetails=t,e.loaded=!1,e.doUserAddExercise()})},e.exerciseSelected=function(){e.isNew=!0,e.title="Add Exercise";var t=o.doGetSelectedExerciseDetails(e.selectedExercise.exerciseid);t.then(function(t){e.userSelectedExerciseDetails=t,e.doUserAddExercise()})},e.loadExerciseDiary=function(t){e.loaded=!0;var a=o.getExerciseDiary(t);a.then(function(t){e.userExerciseDiaryDataAll=t,e.loaded=!1})},e.doInsertUserExercise=function(){e.userExercise.exerciseid=e.userSelectedExerciseDetails.exerciseid,e.selectedDate==y?e.userExercise.date=e.selectedDate:e.userExercise.date=e.selectedDate.format("dd/mm/yyyy"),e.userExercise.workoutvalue=parseInt(e.userExercise.workoutvalue);var t=o.doInsertUserExercise(e.userExercise);t.then(function(){e.loadExerciseDiary(e.userExercise.date),e.doGetIntakeBruntByDate(e.userExercise.date),e.doGetHistoryReport()})},e.doDeleteUserExercise=function(t){e.loaded=!0;var a=o.doDeleteUserExercise(t);a.then(function(){e.selectedDate==y?(e.loadExerciseDiary(e.selectedDate),e.doGetIntakeBruntByDate(e.selectedDate)):(e.loadExerciseDiary(e.selectedDate.format("dd/mm/yyyy")),e.doGetIntakeBruntByDate(e.selectedDate.format("dd/mm/yyyy"))),e.doGetHistoryReport()})};var h="",g="";e.doEditUserExercise=function(t,a){e.isNew=!1,e.title="Edit Exercise",e.loaded=!0;var r=o.doGetSelectedExerciseDetails(t);r.then(function(r){e.userSelectedExerciseDetails=r;var i=o.doGetUserExerciseDetails(a);i.then(function(r){e.userExercise.userexercisemapid=a,e.userExercise.exerciseid=t,e.userExercise.workoutvalue=parseInt(r.workoutvalue),g=parseInt(r.workoutvalue),e.current=e.caloriesSpent=r.calories,e.current=e.current.toFixed(2),e.current.length-3>2?e.max=100+100*String(0|e.current).slice(0,-2):e.max=100,e.loaded=!1,e.doUserAddExercise()})})},e.isCleanExercise=function(){return angular.equals(h,e.userExercise.levelid)&&angular.equals(g,e.userExercise.workoutvalue)},e.doUpdateUserExercise=function(){null!=e.userExercise.date&&delete e.userExercise.date,e.userExercise.userexercisemapid=e.userExercise.userexercisemapid,e.userExercise.exerciseid=e.userExercise.exerciseid,e.userExercise.levelid=e.userExercise.levelid.levelid,e.userExercise.workoutvalue=parseInt(e.userExercise.workoutvalue);var t=o.doUpdateUserExercise(e.userExercise);t.then(function(){e.selectedDate==y?(e.loadExerciseDiary(e.selectedDate),e.doGetIntakeBruntByDate(e.selectedDate)):(e.loadExerciseDiary(e.selectedDate.format("dd/mm/yyyy")),e.doGetIntakeBruntByDate(e.selectedDate.format("dd/mm/yyyy"))),e.doGetHistoryReport()})};var p=o.doGetFrequentlyUsedExercise();p.then(function(t){e.frequentExerciseList=t}),e.doCalculateCaloriesExercise=function(){console.log(e.userExercise),0==e.userExercise.workoutvalue&&(e.current=e.caloriesSpent=0),!e.userExercise.workoutvalue>0?e.current=e.caloriesSpent=0:(e.current=e.caloriesSpent=e.userSelectedExerciseDetails.MET*e.demography.weight*(e.userExercise.workoutvalue/60),e.current=e.current.toFixed(2),e.current.length-3>2?e.max=e.max+100*String(0|e.current).slice(0,-2):e.max=100)},e.resetdata=function(){e.foodSuggest={},e.foodSuggestForm.$setPristine(),e.userFood.measure="",e.userFood.servings=[],e.FoodAddForm.$setPristine(),e.current=e.caloriesIntake=0,e.max=100,e.userSelectedFoodDetails={}},e.resetexercisedata=function(){e.exerciseSuggest={},e.exerciseSuggestForm.$setPristine(),e.userExercise.levelid="",e.userExercise.workoutvalue="",e.ExerciseAddForm.$setPristine(),e.current=e.caloriesSpent=0,e.max=100,e.userSelectedExerciseDetails={}},e.goal={status:"set-goal"},e.graph={status:"goal"},e.viewGoal=function(){e.doGetWeightGoal(),e.graph={status:"goal"},setTimeout("viewWeightGraph();",10)},e.cancelUpdate=function(){e.goal={status:"view-goal"}},e.doGetWeightGoal=function(){a.getRequest("user/getWeightGoal/","").then(function(a){if(0==a.data.Response_status)e.updateGoal=0,e.targetText="Period",t.singlePicker=!1,t.minimumDate=new Date;else{e.goalDetails=a.data.Weight_Goal,e.updateGoal=1;var r,i=e.goalDetails.startdate.slice(6,10)+"-"+e.goalDetails.startdate.slice(3,5)+"-"+e.goalDetails.startdate.slice(0,2),s=y.slice(6,10)+"-"+y.slice(3,5)+"-"+y.slice(0,2),n=e.goalDetails.enddate.slice(6,10)+"-"+e.goalDetails.enddate.slice(3,5)+"-"+e.goalDetails.enddate.slice(0,2);new Date(i).getTime()>new Date(s).getTime()?(r=new Date(i).getTime(),e.viewGraphButton=!1):(r=new Date(s).getTime(),e.viewGraphButton=!0);var l=864e5,d=new Date(n).getTime(),c=d-r;if(e.remainingDates=Math.round(c/l),e.remainingDates<0){e.remainingDates=0,e.goalExpired=1;var u=new Date(i).getTime(),h=d-u;e.targetDays=Math.round(h/l);var g=o.doGetAchievedWeight(e.goalDetails.enddate);g.then(function(t){e.achievedWeight=t;var a=0,r=0,i=0;e.goalDetails.targetweight>e.goalDetails.initialweight?(a=e.goalDetails.targetweight-e.goalDetails.initialweight,r=e.achievedWeight-e.goalDetails.initialweight,0>=r?e.achieveStatus=0:(i=r/a,1==i?e.achieveStatus=2:1>(.6>=i)&&1.4>i?e.achieveStatus=1:e.achieveStatus=0)):(a=e.goalDetails.initialweight-e.goalDetails.targetweight,r=e.goalDetails.initialweight-e.achievedWeight,0>=r?e.achieveStatus=0:(i=r/a,1==i?e.achieveStatus=2:1>(.6>=i)&&1.4>i?e.achieveStatus=1:e.achieveStatus=0))})}else e.goalExpired=0;t.currentweight=e.demography.weight,t.targetweight=e.goalDetails.targetweight,e.goal={status:"view-goal"}}})},e.setGoal=function(){e.setGoalDetails={},e.setGoalDetails.startdate=document.getElementById("start").value,e.setGoalDetails.enddate=document.getElementById("end").value,e.setGoalDetails.targetweight=parseFloat(document.getElementById("target").value),e.setGoalDetails.initialweight=e.demography.weight,""==e.setGoalDetails.startdate&&(e.setGoalDetails.startdate=e.setGoalDetails.enddate=y),""!=e.demography.weight&&($(function(){$("#lean_overlay").fadeTo(1e3),$("#goal-confirmation").fadeIn(600),$(".common_model").show()}),$(".modal_close").click(function(){$(".common_model").hide(),$("#goal-confirmation").hide(),$("#lean_overlay").hide()}),$("#lean_overlay").click(function(){$(".common_model").hide(),$("#goal-confirmation").hide(),$("#lean_overlay").hide()}))},e.setGoalConfirmation=function(){a.postRequest("user/insertWeightGoal/",e.setGoalDetails).then(function(){e.doGetWeightGoal(),e.doInsertOrUpdateWeightLog(y,parseFloat(e.setGoalDetails.initialweight))},function(){errorMessage(r,"Please try again later!")})},e.doGetWeightLog=function(t){var a=o.doGetWeightLogDetails(t);a.then(function(t){var a=t.Weight_logs;a.weight?(e.weightlog=e.originalWeight=a.weight,$("#weightLog").val(a.weight)):(e.originalWeight="",$("#weightLog").val(""))})},e.weightLogEntry=function(){e.weightUpdateText="Updating...",e.spinner=!0,e.doInsertOrUpdateWeightLog($("#weight-log-date").val(),parseFloat($("#weightLog").val()))},e.doInsertOrUpdateWeightLog=function(i,o){a.postRequest("user/weightlogInsertorUpdate/",{date:i,weight:o}).then(function(){i==y&&1==e.updateGoal&&(t.currentweight=o,refreshGraph(),e.updateAverageGainSpent(i)),e.spinner=!1,e.weightUpdateText="Update Weight",e.doGetWeightLog(i),e.doGetDemograph()},function(){errorMessage(r,"Please try again later!")})},e.isCleanWeight=function(){return angular.equals(parseFloat($("#weightLog").val()),parseFloat(e.originalWeight))},e.doGetWeightLogGraph=function(){e.graph={status:"goal-graph"};var t=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];a.postRequest("user/getWeightLogGraph/",{startdate:e.goalDetails.startdate.toString(),enddate:e.goalDetails.enddate.toString()}).then(function(a){e.weightlogGraph=a.data.Weight_logs;var r=[];$.each(e.weightlogGraph,function(e,a){var i=[],o=a.date.split("/");i.push(t[o[1]-1]+" "+o[0]),i.push(a.weight),r.push(i)}),e.weightGraphValue=r,e.weightGraph=l(e.weightGraphValue,30)},function(){errorMessage(r,"Please try again later!")})},e.deteteGoal=function(){$(function(){$("#lean_overlay").fadeTo(1e3),$("#goal-delete-confirmation").fadeIn(600),$(".common_model").show()}),$(".modal_close").click(function(){$(".common_model").hide(),$("#goal-delete-confirmation").hide(),$("#lean_overlay").hide()}),$("#lean_overlay").click(function(){$(".common_model").hide(),$("#goal-delete-confirmation").hide(),$("#lean_overlay").hide()})},e.doDeleteGoal=function(){a.deleteRequest("user/deleteWeightGoal/","").then(function(){e.weight="",e.updateGoal=0,t.goalStartDate=t.goalEndDate=y,t.minimumDate=new Date,e.targetText="Period",t.singlePicker=!1,e.goal={status:"set-goal"}},function(){errorMessage(r,"Please try again later!")})},e.updateGoalDetails=function(){e.targetText="End Date",t.singlePicker=!0,e.originalUpdateGoalWeight={endDate:e.goalDetails.enddate,weight:e.goalDetails.targetweight};var a=e.goalDetails.startdate.slice(6,10)+","+e.goalDetails.startdate.slice(3,5)+","+e.goalDetails.startdate.slice(0,2),r=y.slice(6,10)+","+y.slice(3,5)+","+y.slice(0,2);t.goalStartDate=e.goalDetails.startdate,t.goalEndDate=e.goalDetails.enddate,e.weight=e.goalDetails.targetweight,new Date(a).getTime()>=new Date(r).getTime()?t.minimumDate=e.goalDetails.startdate:t.minimumDate=new Date,e.goal={status:"set-goal"}},e.isCleanUpdateGoal=function(){var t=document.getElementById("end").value;""==t&&(t=e.goalDetails.enddate);var a={endDate:t,weight:parseFloat(document.getElementById("target").value)};return angular.equals(e.originalUpdateGoalWeight,a)},e.doUpdateGoal=function(){e.setGoalDetails={},e.setGoalDetails.startdate=e.goalDetails.startdate,""==document.getElementById("start").value?e.setGoalDetails.enddate=e.goalDetails.enddate:e.setGoalDetails.enddate=document.getElementById("start").value,e.setGoalDetails.targetweight=parseFloat(document.getElementById("target").value),e.setGoalDetails.initialweight=e.goalDetails.initialweight,a.putRequest("user/updateWeightGoal/",e.setGoalDetails).then(function(){e.doGetWeightGoal()},function(){errorMessage(r,"Please try again later!")})},e.doGetIntakeBruntByDate=function(t){a.postRequest("user/getTotalCalorieDetailForDate/",{date:t}).then(function(t){e.calorieGraph=t.data.Calorie_Graph,""==e.calorieGraph.intakecalorie&&(e.calorieGraph.intakecalorie=0),""==e.calorieGraph.burntcalorie&&(e.calorieGraph.burntcalorie=0),e.averageIntake=Math.round(e.calorieGraph.averagecalorieintake),e.averageSpent=Math.round(e.calorieGraph.averagecalorieburnt),e.currentGain=e.calorieGraph.intakecalorie,e.currentGain=e.currentGain.toFixed(2),e.averageIntake<e.calorieGraph.intakecalorie?e.currentGainColour="red":e.currentGainColour="limegreen",e.currentSpent=e.calorieGraph.burntcalorie,e.currentSpent=e.currentSpent.toFixed(2),e.averageSpent<e.calorieGraph.burntcalorie?e.currentSpentColour="red":e.currentSpentColour="orange";var a,r;r=e.calorieGraph.intakecalorie>e.calorieGraph.burntcalorie?parseFloat((e.calorieGraph.intakecalorie-e.calorieGraph.burntcalorie).toFixed(2)):0,a=e.calorieGraph.intakecalorie<e.calorieGraph.burntcalorie?parseFloat((e.calorieGraph.burntcalorie-e.calorieGraph.intakecalorie).toFixed(2)):0,e.calorieGraph.intakecalorie==e.calorieGraph.burntcalorie&&(a=0,r=0),$("#gainVsSpent").highcharts({chart:{type:"column"},xAxis:{categories:["Compare <br/> <small>(calories)</small>"]},yAxis:{allowDecimals:!1,min:0,title:{text:""}},credits:{enabled:!1},exporting:{enabled:!1},legend:{enabled:!1},title:{text:""},tooltip:{enabled:!0,backgroundColor:"rgba(255, 255, 255, 1)",borderWidth:1,shadow:!0,style:{fontSize:"10px",padding:5,zIndex:1e4},formatter:function(){return"<b>"+this.x+"</b><br/>"+this.series.name+": "+this.y+"<br/>"}},plotOptions:{column:{stacking:"normal"}},series:[{name:"Spent",data:[a],color:"#eee",stack:"male"},{name:"Intake",data:[e.calorieGraph.intakecalorie],color:"limegreen",stack:"male"},{name:"Gained",color:"#eee",data:[r],stack:"female"},{name:"Brunt",data:[e.calorieGraph.burntcalorie],color:"red",stack:"female"}]})},function(){errorMessage(r,"Please try again later!")})},e.updateAverageGainSpent=function(t){a.postRequest("user/getTotalCalorieDetailForDate/",{date:t}).then(function(t){e.averageIntake=Math.round(t.data.Calorie_Graph.averagecalorieintake),e.averageSpent=Math.round(t.data.Calorie_Graph.averagecalorieburnt)})},e.goGetDailyIntakeGraph=function(t){a.postRequest("user/dailyCalorieGraph/",{date:t}).then(function(t){e.calorieIntakeGraph=t.data.dailyCalorieGraph,""==e.calorieIntakeGraph.averagefat&&(e.calorieIntakeGraph.averagefat=0),""==e.calorieIntakeGraph.fat&&(e.calorieIntakeGraph.fat=0),""==e.calorieIntakeGraph.averageprotein&&(e.calorieIntakeGraph.averageprotein=0),""==e.calorieIntakeGraph.protein&&(e.calorieIntakeGraph.protein=0),""==e.calorieIntakeGraph.averagefibre&&(e.calorieIntakeGraph.averagefibre=0),""==e.calorieIntakeGraph.fibre&&(e.calorieIntakeGraph.fibre=0),""==e.calorieIntakeGraph.averagecarbo&&(e.calorieIntakeGraph.averagecarbo=0),""==e.calorieIntakeGraph.carbo&&(e.calorieIntakeGraph.carbo=0),$("#dailyIntake").highcharts({title:{text:""},xAxis:{categories:["Protein","Fat","Carbs","Fibre"],labels:{style:{fontSize:"9px",fontWeight:"normal"},useHTML:!0,formatter:function(){return"Protein"==this.value?this.value+'<br/><img src="../../images/i-protein.jpg"/>':"Fat"==this.value?"&nbsp;&nbsp;"+this.value+'&nbsp;&nbsp;<br/><img src="../../images/i-fats.jpg"/>':"Carbs"==this.value?this.value+'<br/><img src="../../images/i-carbs.jpg"/>':"Fibre"==this.value?"&nbsp;"+this.value+'&nbsp;<br/><img src="../../images/i-fibre.jpg"/>':this.value}}},tooltip:{enabled:!0,backgroundColor:"rgba(255, 255, 255, 1)",borderWidth:1,shadow:!0,style:{fontSize:"10px",padding:5,zIndex:1e4},formatter:!1},yAxis:{title:{text:null},labels:{style:{fontSize:"10px"}}},exporting:{enabled:!1},credits:{enabled:!1},legend:{enabled:!0},series:[{type:"column",name:"Units",data:[{name:"Protein",color:"limegreen",y:parseFloat(e.calorieIntakeGraph.protein)},{name:"Fat",color:"red",y:parseFloat(e.calorieIntakeGraph.fat)},{name:"Carbs",color:"orange",y:parseFloat(e.calorieIntakeGraph.carbo)},{name:"Fibre",color:"#ffcc00",y:parseFloat(e.calorieIntakeGraph.fibre)}]},{type:"spline",name:"Average",data:[parseFloat(e.calorieIntakeGraph.averageprotein),parseFloat(e.calorieIntakeGraph.averagefat),parseFloat(e.calorieIntakeGraph.averagecarbo),parseFloat(e.calorieIntakeGraph.averagefibre)],marker:{lineWidth:1,lineColor:Highcharts.getOptions().colors[1],fillColor:"white"}}]})},function(){errorMessage(r,"Please try again later!")})},e.graphOne=function(){e.graphs=1},e.graphTwo=function(){e.graphs=2},e.loadSessionFood=function(){switch(parseInt(e.graphSessionId)){case 1:e.userSessionFoods=e.userFoodDiaryDataAll.BreakFast;break;case 2:e.userSessionFoods=e.userFoodDiaryDataAll.Brunch;break;case 3:e.userSessionFoods=e.userFoodDiaryDataAll.Lunch;break;case 4:e.userSessionFoods=e.userFoodDiaryDataAll.Evening;break;case 5:e.userSessionFoods=e.userFoodDiaryDataAll.Dinner}e.goGetSessionGraph(e.graphSessionId)},e.goGetSessionGraph=function(t){e.loaded=!0;var i;i=e.selectedDate==y?e.selectedDate:e.selectedDate.format("dd/mm/yyyy"),e.storedSessionId=t,e.storedSessionId&&a.postRequest("user/getDailyCalorieGraphWithSession/",{date:i,sessionid:t}).then(function(t){e.calorieIntakeGraph=t.data.Calorie_Graph,e.graphResponse=t.data.Response_status,""==e.calorieIntakeGraph.fat&&(e.calorieIntakeGraph.fat=0),""==e.calorieIntakeGraph.protein&&(e.calorieIntakeGraph.protein=0),""==e.calorieIntakeGraph.fibre&&(e.calorieIntakeGraph.fibre=0),""==e.calorieIntakeGraph.carbo&&(e.calorieIntakeGraph.carbo=0),e.totalUnits=e.calorieIntakeGraph.fat+e.calorieIntakeGraph.protein+e.calorieIntakeGraph.fibre+e.calorieIntakeGraph.carbo,$("#sessionGraph").highcharts({title:{text:""},xAxis:{categories:["Protein","Fat","Carbs","Fibre"],labels:{useHTML:!0,formatter:function(){return"Protein"==this.value?this.value+'<br/><img src="../../images/i-protein.jpg"/>':"Fat"==this.value?"&nbsp;&nbsp;"+this.value+'&nbsp;&nbsp;<br/><img src="../../images/i-fats.jpg"/>':"Carbs"==this.value?this.value+'<br/><img src="../../images/i-carbs.jpg"/>':"Fibre"==this.value?this.value+'<br/><img src="../../images/i-fibre.jpg"/>':this.value}}},tooltip:{enabled:!0,backgroundColor:"rgba(255, 255, 255, 1)",borderWidth:1,shadow:!0,style:{fontSize:"10px",padding:5,zIndex:500},formatter:!1},yAxis:{title:{text:null},min:0,max:e.totalUnits,labels:{style:{fontSize:"10px"}}},exporting:{enabled:!1},credits:{enabled:!1},legend:{enabled:!1},series:[{type:"column",showInLegend:!1,name:"Unit",data:[{name:"Protein",color:"limegreen",y:parseFloat(e.calorieIntakeGraph.protein)},{name:"Fat",color:"red",y:parseFloat(e.calorieIntakeGraph.fat)},{name:"Carbs",color:"orange",y:parseFloat(e.calorieIntakeGraph.carbo)},{name:"Fibre",color:"#ffcc00",y:parseFloat(e.calorieIntakeGraph.fibre)}]}]}),e.loaded=!1},function(){errorMessage(r,"Please try again later!")})},e.doGetCoachAdvices=function(){a.getRequest("user/getCoachAdvicesByUser/","").then(function(t){var a=o.getCoachIndividualDetail(t.data.Coach_Advice),r=[{coachid:"n1",coachname:""},{coachid:"n2",coachname:""},{coachid:"n3",coachname:""},{coachid:"n4",coachname:""}];if(a.length<3)for(i=a.length;i<3;i++)a.push(r[i]);else a.push(r[0]);e.coachadvice=a,e.usercoachadvicedetails=e.coachadvice[0],coachAdviceCarousel()},function(){console.log("Please try again later!")})},e.setCoachDeatails=function(t){e.usercoachadvicedetails=t},e.getHistory=function(){e.historyReport=1,""==$("#history-start").val()?e.isHistoryEmpty=1:e.isHistoryEmpty=0},e.otherThanHistory=function(){e.historyReport=0},e.setHistoryType=function(t){e.historyType=t,""==$("#history-start").val()||e.doGetHistoryReport()},e.doGetHistoryReport=function(){e.isHistoryEmpty=0,e.loaded=!0;var t,r;""==$("#history-start").val()?t=r=y:(t=$("#history-start").val(),r=$("#history-end").val());var i=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],o=[],s={};1==e.historyType?a.postRequest("user/calorieGraphbyDates/",{fromdate:t,todate:r}).then(function(a){e.historyRecord=a.data.calorieGraphbyDates,$.each(e.historyRecord,function(e,t){var a=[],r=t.date.split("/");a.push(i[r[1]-1]+" "+r[0]),a.push(parseFloat(t.calorie)),o.push(a)}),s.title="Calories Intaken Graph ( "+t+" - "+r+" )",s.name="Calories Gained",s.suffix=" cals",s.yaxis="Calories (cal)",s.color="limegreen",e.drawHistoryGraph(o,s)}):2==e.historyType?a.postRequest("user/getCalorieBurntGraphByDates/",{fromdate:t,todate:r}).then(function(a){e.historyRecord=a.data.CalorieBurntGraphbyDates,$.each(e.historyRecord,function(e,t){var a=[],r=t.date.split("/");a.push(i[r[1]-1]+" "+r[0]),a.push(parseFloat(t.calorie)),o.push(a)}),s.title="Calories Brunt Graph ( "+t+" - "+r+" )",s.name="Calories Burned",s.suffix=" cals",s.yaxis="Calories (cal)",s.color="red",e.drawHistoryGraph(o,s)}):3==e.historyType?a.postRequest("user/getExerciseMinutesUsingDates/",{fromdate:t,todate:r}).then(function(a){e.historyRecord=a.data.ExerciseMinutesUsingDates,$.each(e.historyRecord,function(e,t){var a=[],r=t.date.split("/");a.push(i[r[1]-1]+" "+r[0]),a.push(parseFloat(t.workoutvalue)),o.push(a)}),s.title="Exercise Minutes Graph ( "+t+" - "+r+" )",s.name="Exercise Minutes",s.suffix=" mints",s.yaxis="Minutes",s.color="blue",e.drawHistoryGraph(o,s)}):a.postRequest("/user/getWeightLogGraph/",{startdate:t,enddate:r}).then(function(a){e.historyRecord=a.data.Weight_logs,$.each(e.historyRecord,function(e,t){var a=[],r=t.date.split("/");a.push(i[r[1]-1]+" "+r[0]),a.push(parseFloat(t.weight)),o.push(a)}),s.title="Weight Log Graph ( "+t+" - "+r+" )",s.name="Weight Log",s.suffix=" Kgs",s.yaxis="Weight (Kgs)",s.color="#f8ba01",e.drawHistoryGraph(o,s)})},e.drawHistoryGraph=function(t,a){e.loaded=!1,$("#historyGraph").highcharts({title:{text:a.title},xAxis:{categories:[]},tooltip:{enabled:!0,backgroundColor:"rgba(255, 255, 255, 1)",borderWidth:1,shadow:!0,style:{fontSize:"10px",padding:5,zIndex:500},formatter:!1,valueSuffix:a.suffix},yAxis:{title:{text:a.yaxis},plotLines:[{value:0,width:1,color:a.color}]},colors:[a.color],exporting:{enabled:!1},credits:{enabled:!1},legend:{enabled:!1},series:[{name:a.name,data:t}]})};var y=new Date,m=y.getDate(),f=y.getMonth()+1,D=y.getFullYear();10>m&&(m="0"+m),10>f&&(f="0"+f),y=m+"/"+f+"/"+D,e.weightLogDate=y,e.selectedDate=y,e.todayDate=y,t.goalStartDate=t.goalEndDate=y,e.initialLoadFoodAndExercise=function(){e.selectedDate==y?(e.loadFoodDiary(e.selectedDate),e.loadExerciseDiary(e.selectedDate),e.doGetIntakeBruntByDate(e.selectedDate),e.goGetDailyIntakeGraph(e.selectedDate)):(e.loadFoodDiary(e.selectedDate.format("dd/mm/yyyy")),e.loadExerciseDiary(e.selectedDate.format("dd/mm/yyyy")),e.doGetIntakeBruntByDate(e.selectedDate.format("dd/mm/yyyy")),e.goGetDailyIntakeGraph(e.selectedDate.format("dd/mm/yyyy"))),e.doGetWeightGoal(),e.doGetWeightLog(y),e.goGetSessionGraph(e.storedSessionId)},e.initialLoadFoodAndExercise(),e.doGetCoachAdvices(),e.offset=0,e.timerCurrent=0,e.uploadCurrent=0,e.stroke=12,e.radius=70,e.isSemi=!1,e.rounded=!1,e.responsive=!1,e.clockwise=!0,e.bgColor="#ddd",e.duration=1e3,e.currentAnimation="easeOutCubic",e.animations=[],angular.forEach(n.animations,function(t,a){e.animations.push(a)}),e.getStyle=function(){var t=(e.isSemi?"":"translateY(-50%) ")+"translateX(-50%)";return{top:e.isSemi?"auto":"50%",bottom:e.isSemi?"5%":"auto",left:"50%",transform:t,"-moz-transform":t,"-webkit-transform":t}};e.prevent=function(){event.preventDefault()},e.open=function(t){t.preventDefault(),t.stopPropagation(),e.opened=!0},e.format="dd/MM/yyyy";var v=function(){var e=/d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZ]|"[^"]*"|'[^']*'/g,t=/\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g,a=/[^-+\dA-Z]/g,r=function(e,t){for(e=String(e),t=t||2;e.length<t;)e="0"+e;return e};return function(i,o,s){var n=v;if(1!=arguments.length||"[object String]"!=Object.prototype.toString.call(i)||/\d/.test(i)||(o=i,i=void 0),i=i?new Date(i):new Date,isNaN(i))throw SyntaxError("invalid date");o=String(n.masks[o]||o||n.masks["default"]),"UTC:"==o.slice(0,4)&&(o=o.slice(4),s=!0);var l=s?"getUTC":"get",d=i[l+"Date"](),c=i[l+"Day"](),u=i[l+"Month"](),h=i[l+"FullYear"](),g=i[l+"Hours"](),p=i[l+"Minutes"](),y=i[l+"Seconds"](),m=i[l+"Milliseconds"](),f=s?0:i.getTimezoneOffset(),D={d:d,dd:r(d),ddd:n.i18n.dayNames[c],dddd:n.i18n.dayNames[c+7],m:u+1,mm:r(u+1),mmm:n.i18n.monthNames[u],mmmm:n.i18n.monthNames[u+12],yy:String(h).slice(2),yyyy:h,h:g%12||12,hh:r(g%12||12),H:g,HH:r(g),M:p,MM:r(p),s:y,ss:r(y),l:r(m,3),L:r(m>99?Math.round(m/10):m),t:12>g?"a":"p",tt:12>g?"am":"pm",T:12>g?"A":"P",TT:12>g?"AM":"PM",Z:s?"UTC":(String(i).match(t)||[""]).pop().replace(a,""),o:(f>0?"-":"+")+r(100*Math.floor(Math.abs(f)/60)+Math.abs(f)%60,4),S:["th","st","nd","rd"][d%10>3?0:(d%100-d%10!=10)*d%10]};return o.replace(e,function(e){return e in D?D[e]:e.slice(1,e.length-1)})}}();v.masks={"default":"ddd mmm dd yyyy HH:MM:ss",shortDate:"m/d/yy",mediumDate:"mmm d, yyyy",longDate:"mmmm d, yyyy",fullDate:"dddd, mmmm d, yyyy",shortTime:"h:MM TT",mediumTime:"h:MM:ss TT",longTime:"h:MM:ss TT Z",isoDate:"yyyy-mm-dd",isoTime:"HH:MM:ss",isoDateTime:"yyyy-mm-dd'T'HH:MM:ss",isoUtcDateTime:"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'"},v.i18n={dayNames:["Sun","Mon","Tue","Wed","Thu","Fri","Sat","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],monthNames:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","January","February","March","April","May","June","July","August","September","October","November","December"]},Date.prototype.format=function(e,t){return v(this,e,t)}}]).constant("uibdatepickerPopupConfig",{datepickerPopup:"dd/MM/yyyy",
    closeOnDateSelection:!0,appendToBody:!0,showButtonBar:!1}).constant("uibDatepickerConfig",{formatDay:"dd",formatMonth:"MMMM",formatYear:"yyyy",formatDayHeader:"EEE",formatDayTitle:"MMMM yyyy",formatMonthTitle:"yyyy",datepickerMode:"day",minMode:"day",maxMode:"year",showWeeks:!1,startingDay:0,yearRange:20,minDate:null,maxDate:new Date}),userApp.filter("trusted",["$sce",function(e){return function(t){return e.trustAsResourceUrl(t)}}]),userApp.directive("hcGraph",function(){return{restrict:"C",replace:!0,scope:{graph:"="},controller:function(){},template:'<div id="graph-container" style="margin: 0 auto;height: 300px">not working</div>',link:function(e){var t=new Highcharts.Chart({chart:{renderTo:"graph-container",plotBackgroundColor:null,plotBorderWidth:null,plotShadow:!1},title:{text:"Goal Graph",x:-20},subtitle:{text:"",x:-20},xAxis:{categories:[]},yAxis:{title:{text:"Weight (Kgs)"},plotLines:[{value:0,width:1,color:"#f8ba01"}]},tooltip:{valueSuffix:"Kgs"},colors:["#f8ba01"],legend:{layout:"vertical",align:"right",verticalAlign:"middle",borderWidth:0,x:80,y:0},series:[{name:"Weight",data:[]}],exporting:{enabled:!1},credits:{enabled:!1}});e.$watch("graph",function(e){t.series[0].setData(e,!0)},!0)}}}),userApp.directive("historyGraph",function(){return{restrict:"C",replace:!0,scope:{historygraph:"="},controller:function(){},template:'<div id="graph-container" style="height: 400px;width: 67%">not working</div>',link:function(e){var t=new Highcharts.Chart({chart:{renderTo:"graph-container",plotBackgroundColor:null,plotBorderWidth:null,plotShadow:!1},title:{text:e.test,x:-20},subtitle:{text:"",x:-20},xAxis:{categories:[]},yAxis:{title:{text:"Weight (Kgs)"},plotLines:[{value:0,width:1,color:"#ff0066"}]},tooltip:{valueSuffix:"Kgs"},colors:["#ff0066"],legend:{layout:"vertical",align:"right",verticalAlign:"middle",borderWidth:0,x:80,y:0},series:[{name:"Weight",data:[]}],exporting:{enabled:!1},credits:{enabled:!1}});e.$watch("historygraph",function(e){t.series[0].setData(e,!0)},!0)}}}),userApp.directive("heightFoodBind",function(){return{link:function(e,t){e.$watch(function(){setTimeout(function(){var e=$(".food");t.height()>parseInt($(".food_scrollbar").css("height"))?e.css({paddingRight:"15px"}):e.css({paddingRight:"3px"})},500)})}}}),userApp.directive("heightExerciseBind",function(){return{link:function(e,t){e.$watch(function(){setTimeout(function(){var e=$(".exercise");t.height()>parseInt($(".exercise-height").css("height"))?e.css({paddingRight:"15px"}):e.css({paddingRight:"3px"})},500)})}}}),userApp.directive("shouldFocus",function(){return{restrict:"A",link:function(e,t,a){e.$watch(a.shouldFocus,function(e){e&&t[0].scrollIntoView(!1)})}}});