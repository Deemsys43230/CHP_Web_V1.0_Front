var userApp=angular.module("userApp",["ngRoute","oc.lazyLoad","ngCookies","requestModule","flash"]);userApp.controller("DemographyController",["$rootScope","$scope","requestHandler","Flash","$location","$timeout",function(a,b,c,d,e,f){var g="",h="";b.doGetDemographyandNutrition=function(){c.getRequest("user/getDemography/","").then(function(a){if(b.demography=a.data.Demography_Data,b.demography.height=b.demography.height.toString(),b.demography.weight=b.demography.weight.toString(),b.demography.hip=b.demography.hip.toString(),b.demography.waist=b.demography.waist.toString(),b.demography.userPlanType=b.demography.userPlanType.toString(),b.demography.userActivityType=b.demography.userActivityType.toString(),2==b.userProfile.unitPreference){b.demography.height=b.demography.height.toString();var c=b.demography.height.split("."),d=new Array;d=c,b.demography.heightFeet=d[0],void 0==d[1]?b.demography.heightInches=0:(b.demography.heightInches=d[1],b.demography.heightInches=parseInt(b.demography.heightInches))}console.log(a.data.Demography_Data),g=angular.copy(a.data.Demography_Data)}),c.getRequest("user/getNutrition/","").then(function(a){b.nutrients=a.data.Nutrition,b.nutritionToString(b.nutrients)},function(){errorMessage(d,"Please try again later!")})},b.nutritionToString=function(a){b.nutrients=a,null==b.nutrients.saturatedfat?b.nutrients.saturatedfat="":b.nutrients.saturatedfat=b.nutrients.saturatedfat.toString(),null==b.nutrients.monounsaturatedfat?b.nutrients.monounsaturatedfat="":b.nutrients.monounsaturatedfat=b.nutrients.monounsaturatedfat.toString(),null==b.nutrients.polyunsaturatedfat?b.nutrients.polyunsaturatedfat="":b.nutrients.polyunsaturatedfat=b.nutrients.polyunsaturatedfat.toString(),null==b.nutrients.sugar?b.nutrients.sugar="":b.nutrients.sugar=b.nutrients.sugar.toString(),null==b.nutrients.calcium?b.nutrients.calcium="":b.nutrients.calcium=b.nutrients.calcium.toString(),null==b.nutrients.iron?b.nutrients.iron="":b.nutrients.iron=b.nutrients.iron.toString(),null==b.nutrients.sodium?b.nutrients.sodium="":b.nutrients.sodium=b.nutrients.sodium.toString(),null==b.nutrients.potassium?b.nutrients.potassium="":b.nutrients.potassium=b.nutrients.potassium.toString(),null==b.nutrients.vitaminA?b.nutrients.vitaminA="":b.nutrients.vitaminA=b.nutrients.vitaminA.toString(),null==b.nutrients.vitaminC?b.nutrients.vitaminC="":b.nutrients.vitaminC=b.nutrients.vitaminC.toString(),null==b.nutrients.phosphorous?b.nutrients.phosphorous="":b.nutrients.phosphorous=b.nutrients.phosphorous.toString(),null==b.nutrients.vitaminB12?b.nutrients.vitaminB12="":b.nutrients.vitaminB12=b.nutrients.vitaminB12.toString(),null==b.nutrients.vitaminE?b.nutrients.vitaminE="":b.nutrients.vitaminE=b.nutrients.vitaminE.toString(),null==b.nutrients.vitaminK?b.nutrients.vitaminK="":b.nutrients.vitaminK=b.nutrients.vitaminK.toString(),null==b.nutrients.thiamin?b.nutrients.thiamin="":b.nutrients.thiamin=b.nutrients.thiamin.toString(),null==b.nutrients.riboflavin?b.nutrients.riboflavin="":b.nutrients.riboflavin=b.nutrients.riboflavin.toString(),null==b.nutrients.niacin?b.nutrients.niacin="":b.nutrients.niacin=b.nutrients.niacin.toString(),null==b.nutrients.folicacid?b.nutrients.folicacid="":b.nutrients.folicacid=b.nutrients.folicacid.toString(),null==b.nutrients.vitaminB6?b.nutrients.vitaminB6="":b.nutrients.vitaminB6=b.nutrients.vitaminB6.toString(),h=angular.copy(b.nutrients)},b.doUpdateDemography=function(){b.demography.heightFeet&&b.demography.heightInches&&(b.demography.height=b.demography.heightFeet+"."+b.demography.heightInches),b.demography.height=parseFloat(b.demography.height),b.demography.weight=parseFloat(b.demography.weight),b.demography.hip=parseFloat(b.demography.hip),b.demography.obesity=parseFloat(b.demography.obesity),b.demography.diabetes=parseFloat(b.demography.diabetes),b.demography.targetweight=parseFloat(b.demography.targetweight),"0"==b.demography.obesity&&(b.demography.obesity=""),"0"==b.demography.diabetes&&(b.demography.diabetes=""),c.getRequest("getUserId/","").then(function(g){0==g.data.demography.demoUpdatedstatus?b.dashboardNavigation=!0:1==g.data.demography.demoUpdatedstatus&&(b.dashboardNavigation=!1),c.putRequest("user/insertorupdateDemography/",b.demography).then(function(c){b.doGetDemographyandNutrition(),a.checkPath=2,successMessage(d,"Successfully Updated"),f(function(){1==b.dashboardNavigation&&e.path("/dashboard"),b.dashboardNavigation=!1},1e3)},function(){errorMessage(d,"Please try again later!")})})},b.doUpdateNutrition=function(){c.putRequest("user/updateNutrition/",b.nutrients).then(function(a){b.nutrients=a.data.Nutrition,successMessage(d,"Successfully Updated")},function(){errorMessage(d,"Please try again later!")})},b.isCleanDemography=function(){return 0==b.isUpdated?!1:1==b.isUpdated?angular.equals(g,b.demography):void 0},b.isCleanNutrition=function(){return angular.equals(h,b.nutrients)},b.valcheck=function(){"true"==b.demography.obesity?b.demography.obesity="1":b.demography.obesity=""},b.getUserId=function(){c.getRequest("getUserId/","").then(function(a){b.userProfile=a.data.User_Profile,b.isUpdated=a.data.demography.demoUpdatedstatus,b.doGetDemographyandNutrition()})},b.init=function(){b.getUserId()},b.init()}]),userApp.filter("trusted",["$sce",function(a){return function(b){return a.trustAsResourceUrl(b)}}]),userApp.directive("lowerThan",[function(){var a=function(a,b,c,d){var e=function(b){var e=c.lowerThan;b&&e||d.$setValidity("lowerThan",!0);var f="";return f=a.plantype,3==f?d.$setValidity("lowerThan",parseInt(b,10)<parseInt(e,10)):2==f&&d.$setValidity("greaterThan",parseInt(b,10)>parseInt(e,10)),b};d.$parsers.unshift(e),d.$formatters.push(e),c.$observe("lowerThan",function(a){return e(d.$viewValue)})};return{require:"ngModel",link:a,scope:{plantype:"="}}}]);